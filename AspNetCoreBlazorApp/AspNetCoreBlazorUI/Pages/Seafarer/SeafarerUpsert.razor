@page "/seafarer/create"
@page "/seafarer/edit/{id:int}"
@inject ISeafarerRepository _seafarerRepository
@inject NavigationManager _navigationManager

<container class="row mt-2">
    <div class="col-4  offset-4 col-xs">
        <h3 class="card-title text-primary mb-3 ml-3">@Title Seafarer</h3>
        @if (IsLoading)
        {
            //Laod Gif
            <div class="text-center">
                <img src="/images/loading.gif" />
            </div>
        }
        else{
        <EditForm Model="Seafarer" OnValidSubmit="UpsertSeafarer">
            <DataAnnotationsValidator/>
           @* <ValidationSummary />*@
            <div class="form-group">
                <label class="form-label mt-2">First Name</label>
                <InputText @bind-Value="Seafarer.FirstName" class="form-control"></InputText>
                <ValidationMessage For="()=>Seafarer.FirstName"></ValidationMessage>
            </div>
            <div class="form-group">
                <label class="form-label mt-2">Last Name</label>
                <InputText @bind-Value="Seafarer.LastName" class="form-control"></InputText>
                <ValidationMessage For="()=>Seafarer.LastName"></ValidationMessage>
            </div>
            <div class="form-group">
                <label class="form-label mt-2">Email</label>
                <InputText @bind-Value="Seafarer.Email" class="form-control"></InputText>
                <ValidationMessage For="()=>Seafarer.Email"></ValidationMessage>
            </div>
            <div class="form-group">
                <label for="rankselect" class="form-label mt-2">Rank</label>
                <InputSelect @bind-Value="Seafarer.Rank" class="form-select" id="rankselect">
                    <option value="">Select Your Rank</option>
                    <option value="Master">Master</option>
                    <option value="Chief Officer">Chief Officer</option>
                    <option value="Chief Engineer">Chief Engineer</option>
                    <option value="Second Enginer">Second Enginer</option>
                </InputSelect>
                <ValidationMessage For="()=>Seafarer.Rank"></ValidationMessage>
            </div>
            <div class="form-group text-end py-3">
                <button  class="btn btn-primary">@Title</button>
                <NavLink href="/seafarer" class="btn btn-secondary">Go back</NavLink>
            </div>
        </EditForm>
        }
    </div>
</container>

@code {

    [Parameter]
    public int Id { get; set; }

    private Seafarer Seafarer { get; set; } = new();
    private string Title { get; set; } = "Create";

    public bool IsLoading { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id==0)
            {
                //create
                IsLoading = false;
            }
            else
            {
                //edit 
                Title = "Update";
                await LoadSeafarer();
            }
        }
    }

    private async Task LoadSeafarer()
    {
        IsLoading = true;
        StateHasChanged();
        Seafarer = await _seafarerRepository.Get(Id);
        IsLoading = false;
        StateHasChanged();
    }

    private async Task UpsertSeafarer()
    {
        if (Seafarer.SeafarerId==0)
        {
            //create
            await _seafarerRepository.CreateAsync(Seafarer);
        }
        else
        {
            //update
           await _seafarerRepository.UpdateAsync(Seafarer);
        }
       
        _navigationManager.NavigateTo("seafarer");
    }
}